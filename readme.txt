=============================================================================
                               Simple IME TEST
                           −ソースリスト解説書−
=============================================================================
　ここに収録されているのは「Simple IME TEST」のソースリストです。
プログラムサイドに興味のある方はどうぞ。


１.ファイルについて
￣￣￣￣￣￣￣￣￣￣
  「zenkaku.*」………… mediumgauge氏作成の全角文字表示ライブラリ
  「shinonomefont.c」… 東雲フォント
  「draw.*」 …………… 作画関連
  「sime.*」 …………… Simple IMEライブラリ
  「main.c」 …………… Simple IMEテストプログラム

※タブは4に設定すると見やすいです。


２.Simple IMEの使い方
￣￣￣￣￣￣￣￣￣￣￣
 　最初に InitSIME() で辞書ファイルと環境設定を取り込むんですが、これらのファ
 イルは無くてもIMEは動きます。
 辞書ファイルが読めなかった場合は漢字変換が出来なくなるだけでソフトキー機能は
 使えますので。
 辞書ファイルはメモリー上に全て取り込むので、標準の辞書だと1Mバイトもメモリを
 消費してしまいます。
 　InitSIME() の flag ですが、現状では0以外を指定してもメリットは無いでしょう。
 0以外を指定するとソフトキーなどが消える時に背景の復元を行わなくなります。
 これは画面表示をダブルバッファ化した場合に無駄な処理を行わないために用意した
 ものです。
 なお、現在のSimple IMEは画面表示にダブルバッファを使用していません。
 画面に何か表示する場合は予め表示位置に書かれているデータを待避させておいてから
 作画を行い、表示を消す時は待避していたデータを書き戻すという事をしています。
 したがって、背景が常に動いているような状況では現在のSimple IMEは使えません。

 　SIMEgets() で文字列入力を行う前に最低でも１回は SIMEcursor() を実行してカー
 ソル形状とカーソル座標の管理変数を指定してください。
 カーソル座標は SIMEgets() を実行した際に参照されます。
 カーソル座標はドット単位です。
 IME側でカーソル座標を変更する事はありません。
 カーソル座標の値はチェックしていないので、変な値は指定しないでください。

 　SIMEgets() の pad はメイン側でパッド情報を取得した上で値を渡してください。
 以前はIME内でパッド情報を取得していたんですが、メイン側とIME側とで２回パッド
 情報を取得しようとすると異常に時間が消費されるようなのでこんな仕様になりま
 した。
 　str[] は最大33バイトの領域を使用します。内容の初期化は必要ありません。
 str の文字列長が0の場合は（文字列長はstrlen()で取得するべし）ソフトキーなどの
 表示がされたままになっているので、この状態でメイン側が画面作画を行うと画面が
 荒れます。
 str に何かデータが入っている場合はIME側で作画したものは全て消去してあるので、
 この状態なら自由に画面作画を行う事が出来ます。
 str には文字列以外にもカーソルキーやボタンの状態などもコントロールコードとして
 返されます。
 コントロールコードは２個以上同時に返されることはありません。
 なお、PSP のボタンを操作したものが全てコントロールコードとして返されるわけでは
 なく、IMEの操作に関する事柄はIME内で処理が行われ、メイン側には返されません。
 例えばソフトキーを展開している状況でカーソルキーを操作してもメイン側には何も
 返されません。
 （[L]キーとカーソルキーの同時押しなら対応するコードが返されますが）

 　SIMEgetchar() はコントロールコードの取得専用です。
 この関数ではソフトキーは展開できませんし文字カーソルの表示も行いません。
 SIMEgetchar() を実行するときは SIMEcursor() を設定する必要はありません。
 これはメニューなどのカーソルを操作する際に操作感をSimple IMEと合わせたい場合
 などに使ってください。

 　コントロールコードは基本的にパソコンと同じになるようにしてます。

 　最後に、アプリを終了する前に EndSIME() を実行してください。
 別に実行しなくても特に不都合は起こらないでしょうけど、IME設定や漢字候補の順位
 が記録されなくなったりはします。
 これはアプリを強制終了させる場面なら必ずしも EndSIME() を実行する必要は無い
 ってことです。
 　メモリースティックにデータを記録するのは記録する必要がある場合だけです。
 設定等に変化が無かった場合はデータの書き込みは行いません。
 　EndSIME() を実行するとメモリ上の辞書データは消滅するので、これ以後はIME関連
 の関数は実行しないでください。


３.プログラムについて
￣￣￣￣￣￣￣￣￣￣￣
 　前回の赤外線学習リモコンでOSKが使えなかったので、その代わりになるものを作っ
 て見ました。
 いや、実際に作るきっかけになったのは2chの某スレでIMEがどうのこうの言ってるのを
 見たからなんだけどね。

 　IMEは昔FX-DOSというポケコン用OSの日本語環境を構築したときに一度作成していた
 ので、基本的な構造は当時のものを流用しています。
 ただ、当時作成したのは画面下に固定された変換行で漢字変換を行うタイプのものだ
 ったので、今回は今時のインライン変換に対応させてみました。
 これは実に呆気なく実現できちゃいました。
 当時はあれこれ悩んでた記憶があるんだけど、成長したということなんでしょうか。

 　このIMEで行っている事は入力された「よみ」と一致する「よみ」を辞書データ
 ベースから探して、そこに併記されている語句リストを取り出しているだけです。
 本当はここから構文解析を行って名詞とか形容詞とかを判別して候補を最適化させる
 ってのが今時のIMEなんでしょうが、その辺の詳しい知識は無いので実装していませ
 んし今後も実装する予定はありません。
 だれか改良してくれるとうれしいな。


 　問題はソフトキーなのです。
 現状のはやはり使いづらい。求める文字が何処にあるのか直ぐには分からないのが
 困り者。
 慣れればどうにかなるのかなぁ？
 ソフトキーは今回のものの他に一枠に５文字が入ったタイプのものも試作しているん
 だけど、あっちはあっちで２キーの同時押しがデフォになるのがなぁ…
 後でPSP Write風な10キーによるローマ字入力なんてのも試して見ようか、とは思って
 いるものの、多分大して変わらない気がする…。
 外付けでキーボードを繋げば全ては解決だけど、そこまでするならPCで編集すれば
 良くね？って話になる。う〜む…。

 　こんなんで日本語テキストエディタなんて作っても実用性は皆無だと思うのだが、
 欲しがっている人は一体どんな用途に使うつもりなんだろう？


 ver0.90追記
 　ソフトキーはこんなもんだろう。
 現状ではローマ字変換を実装する必要性を感じていないので、ひとまずはこのままで
 行こうかと。
 外部キーボードの使用というシチュエーションが現実的になってきた場合は実装する
 必要があるでしょうね。

 　×５かな配列は上で言ってるヤツを改良したものです。
 本当はこっちがメインになるハズだったんだけど…。

 　５０音配列はおまけのつもりだったんですよ？
 ×５かな配列が特殊だからスタンダードなヤツがあったほうがいいだろうって思って。
 ところがカーソルを複数出すというアイデアを某スレで見かけた時点から迷走が始ま
 って、カーソルが２個になり４個になり入力予測を行ってカーソルを動かし、最後に
 はよみの候補リストを出すまでになってしまいました。
 操作系がかなり複雑になってしまったけど、大丈夫かなぁ。

 　ひとまずはこれで完成ってことで。
 後は他のアプリと組み合わせた場合に不都合が出ないか調べたら本当の完成です。


 Ver1.00追記
 　…案の定問題が出たか。
 SIMEgetchar() をswitchで分岐させるとcaseが４個以上ある場合システムタイマーの
 インスタンスの取得に失敗するらしい…？
 if文なら大丈夫っぽいんだけど、なんか気持ち悪いなぁ。他の部分にも影響が出なけ
 ればいいんだけど。
 SIMEgetchar() 内でやってるのは単なる入力判定だけなので、なんでこんな影響が出る
 のかさっぱり解らん！

 　これでAll OKとはいかないだろうけど、キリが無いのでここで一区切りつけます。
 画面表示のダブルバッファ対応とかGUの活用とかintraFont対応とか先はまだまだある
 んだけど、本業のほうが忙しくなってきたので暫らく放置します。


４.版権など
￣￣￣￣￣￣
 　STEARが作成した部分に関しては版権フリーです。
 改造なり二次利用なり好きに使ってください。


                                 製作／著者

                              村中 昭雄(STEAR)
                       E-mail : YHW02344@nifty.ne.jp

          Home Page : http://homepage2.nifty.com/stear/index.html

